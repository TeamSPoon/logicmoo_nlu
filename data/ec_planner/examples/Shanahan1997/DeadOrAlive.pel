:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(pfc).
% Mon, 23 Mar 2020 02:26:20 GMT
% From ../examples/Shanahan1997/DeadOrAlive.pel:4
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/BusRide.e',69).

 /*  loading(load_e_pl,
   	'/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e').
 */
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; \fullciteA[p. 324]{Shanahan:1997}
%;
%; @book{Shanahan:1997,
%;   author = "Murray Shanahan",
%;   year = "1997",
%;   title = "Solving the Frame Problem",
%;   address = "Cambridge, MA",
%;   publisher = "MIT Press",
%; }
%;
%; deduction
%;
%; modifications from Shanahan's formulation:
%; InitiallyP -> HoldsAt
%; timestamps
%; added [time] Terminates(Shoot(),Loaded(),time).
%;

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e:28
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',29).
% load foundations/Root.e
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',29).
:- load_e('foundations/Root.e', changed).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',29).
:- if(false).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',29).
:- endif.

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e:29
% load foundations/EC.e
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',29).
:- load_e('foundations/EC.e', changed).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',29).
:- if(false).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',29).
:- endif.

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e:31
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',32).
% event Load()
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',32).
event(load).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',32).
==> mpred_prop(load,event).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e:32
% event Shoot()
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',32).
event(shoot).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',32).
==> mpred_prop(shoot,event).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e:33
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',34).
% event Sneeze()
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',34).
event(sneeze).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',34).
==> mpred_prop(sneeze,event).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e:34
% fluent Loaded()
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',34).
fluent(loaded).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',34).
==> mpred_prop(loaded,fluent).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e:35
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',36).
% fluent Alive()
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',36).
fluent(alive).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',36).
==> mpred_prop(alive,fluent).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e:36
% fluent Dead()
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',36).
fluent(dead).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',36).
==> mpred_prop(dead,fluent).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e:37
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',38).
% noninertial Dead
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',38).
==> noninertial(dead).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e:39
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',40).
% [time]
 % Initiates(Load(),Loaded(),time).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',40).

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          initiates(load, loaded, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',40).
axiom(initiates(load, loaded, Time),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e:40
% [time]
 % HoldsAt(Loaded(),time) -> Terminates(Shoot(),Alive(),time).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',40).

 /*  [holds_at(loaded, Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(shoot, alive, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',40).
axiom(terminates(shoot, alive, Time),
    [holds_at(loaded, Time)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e:41
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',42).
% [time]
 % Terminates(Shoot(),Loaded(),time).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',42).

 /*  [] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          terminates(shoot, loaded, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',42).
axiom(terminates(shoot, loaded, Time),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e:42
% [time]
 % HoldsAt(Dead(),time) <-> !HoldsAt(Alive(),time).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',42).

 /*  holds_at(dead, Time) <->
       holds_at(neg(alive), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',42).

 /*  [holds_at, dead] <->
       [holds_at, neg, alive].
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',42).

 /*  holds_at(dead, Time) ->
       holds_at(neg(alive), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',42).

 /*  holds_at(neg(alive), Time) :-
       holds_at(dead, Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',42).

 /*  [holds_at(dead, Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(alive), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',42).
axiom(holds_at(neg(alive), Time),
    [holds_at(dead, Time)]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',42).

 /*  not(holds_at(dead, Time)) :-
       not(holds_at(neg(alive), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',42).

 /*  [holds_at(alive, Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(neg(dead), Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',42).
axiom(holds_at(neg(dead), Time),
    [holds_at(alive, Time)]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',42).

 /*  holds_at(neg(alive), Time) ->
       holds_at(dead, Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',42).

 /*  holds_at(dead, Time) :-
       holds_at(neg(alive), Time).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',42).

 /*  [holds_at(neg(alive), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(dead, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',42).
axiom(holds_at(dead, Time),
    [holds_at(neg(alive), Time)]).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',42).

 /*  not(holds_at(neg(alive), Time)) :-
       not(holds_at(dead, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',42).

 /*  [holds_at(neg(dead), Time)] ->
       ta(Time,
          tvs1=[Time],
          tvs2=[Time],
          holds_at(alive, Time)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',42).
axiom(holds_at(alive, Time),
    [holds_at(neg(dead), Time)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e:44
% HoldsAt(Alive(),0).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',44).

 /*  [] ->
       ta(Ta_Param, tvs1=[], tvs2=[], initially(alive)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',44).
axiom(initially(alive),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e:45
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',46).
% !HoldsAt(Loaded(),0).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',46).

 /*  [] ->
       ta(Ta_Param, tvs1=[], tvs2=[], initially(neg(loaded))).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',46).
axiom(initially(neg(loaded)),
    []).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e:46
% Happens(Load(),0).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',46).

 /*  [is_time(t)] ->
       ta(0, tvs1=[0], tvs2=[t], happens(load, t)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',46).
axiom(happens(load, t),
    [is_time(t)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e:47
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',48).
% Happens(Sneeze(),1).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',48).

 /*  [is_time(now), b(t, now), ignore(t+1==now)] ->
       ta(1, tvs1=[1], tvs2=[now, t], happens(sneeze, now)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',48).
axiom(happens(sneeze, now),
    [is_time(now), b(t, now)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e:48
% Happens(Shoot(),2).
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',48).

 /*  [is_time(t2), b(t, t2), ignore(t+2==t2)] ->
       ta(2, tvs1=[2], tvs2=[t, t2], happens(shoot, t2)).
 */
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',48).
axiom(happens(shoot, t2),
    [is_time(t2), b(t, t2)]).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e:50
% completion Happens
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',50).
==> completion(happens).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e:52
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',53).
% range time 0 3
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',53).
==> range(time,0,3).

% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e:53
% range offset 1 1
:-was_s_l('/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/Shanahan1997/DeadOrAlive.e',53).
==> range(offset,1,1).
%; End of file.
