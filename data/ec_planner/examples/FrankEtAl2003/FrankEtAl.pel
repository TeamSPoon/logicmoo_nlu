:-include(library('ec_planner/ec_test_incl')).
:-expects_dialect(pfc).

 /*  loading(load_e_pl,
   	'/opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/FrankEtAl2003/FrankEtAl.e').
 */
%;
%; Copyright (c) 2005 IBM Corporation and others.
%; All rights reserved. This program and the accompanying materials
%; are made available under the terms of the Common Public License v1.0
%; which accompanies this distribution, and is available at
%; http://www.eclipse.org/legal/cpl-v10.html
%;
%; Contributors:
%; IBM - Initial implementation
%;
%; @article{FrankEtAl:2003,
%;   author = "Stefan L. Frank and Mathieu Koppen and Leo G. M. Noordman and Wietske Vonk",
%;   year = "2003",
%;   title = "Modeling knowledge-based inferences in story comprehension",
%;   journal = "Cognitive Science",
%;   volume = "27",
%;   pages = "875--910",
%; }
%;

% fluent SunShining()
fluent(sunShining()).
==> mpred_prop(sunShining(),fluent).

% fluent Raining()
fluent(raining()).
==> mpred_prop(raining(),fluent).

% fluent Outside(agent)
fluent(outside(agent)).
==> mpred_prop(outside(agent),fluent).
==> meta_argtypes(outside(agent)).

% fluent PlaySoccer(agent)
fluent(playSoccer(agent)).
==> mpred_prop(playSoccer(agent),fluent).
==> meta_argtypes(playSoccer(agent)).

% fluent PlayHideAndSeek(agent)
fluent(playHideAndSeek(agent)).
==> mpred_prop(playHideAndSeek(agent),fluent).
==> meta_argtypes(playHideAndSeek(agent)).

% fluent PlayComputerGame(agent)
fluent(playComputerGame(agent)).
==> mpred_prop(playComputerGame(agent),fluent).
==> meta_argtypes(playComputerGame(agent)).

% fluent PlayWithDog(agent)
fluent(playWithDog(agent)).
==> mpred_prop(playWithDog(agent),fluent).
==> meta_argtypes(playWithDog(agent)).

% fluent Win(agent)
fluent(win(agent)).
==> mpred_prop(win(agent),fluent).
==> meta_argtypes(win(agent)).

% noninertial Outside, PlaySoccer, PlayHideAndSeek, PlayComputerGame
==> noninertial(outside).
==> noninertial(playSoccer).
==> noninertial(playHideAndSeek).
==> noninertial(playComputerGame).

% noninertial PlayWithDog, Win
==> noninertial(playWithDog).
==> noninertial(win).

% xor PlaySoccer, PlayHideAndSeek, PlayComputerGame, PlayWithDog
==> xor([playSoccer,playHideAndSeek,playComputerGame,playWithDog]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/FrankEtAl2003/FrankEtAl.e:34
% [agent,time]
% HoldsAt(PlaySoccer(agent),time) ->
% HoldsAt(Outside(agent),time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/FrankEtAl2003/FrankEtAl.e:36
axiom(holds_at(outside(Agent), Time),
    [holds_at(playSoccer(Agent), Time)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/FrankEtAl2003/FrankEtAl.e:38
% [agent,time]
% HoldsAt(PlaySoccer(agent),time) ->
% ({agent1} agent1!=agent & HoldsAt(PlaySoccer(agent1),time)).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/FrankEtAl2003/FrankEtAl.e:40
axiom([ec_current_domain_db((not(equals(Agent1, Agent)), holds_at(playSoccer(Agent1), Time), some([Agent1])), Domain_db_Ret)],
    [holds_at(playSoccer(Agent), Time)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/FrankEtAl2003/FrankEtAl.e:42
% [agent,time]
% HoldsAt(PlayHideAndSeek(agent),time) ->
% ({agent1} agent1!=agent & HoldsAt(PlayHideAndSeek(agent1),time)).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/FrankEtAl2003/FrankEtAl.e:44
axiom([ec_current_domain_db((not(equals(Agent1, Agent)), holds_at(playHideAndSeek(Agent1), Time), some([Agent1])), Domain_db_Ret)],
    [holds_at(playHideAndSeek(Agent), Time)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/FrankEtAl2003/FrankEtAl.e:46
% [agent,time]
% HoldsAt(PlayComputerGame(agent),time) ->
% !HoldsAt(Outside(agent),time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/FrankEtAl2003/FrankEtAl.e:48
axiom(holds_at(neg(outside(Agent)), Time),
    [holds_at(playComputerGame(Agent), Time)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/FrankEtAl2003/FrankEtAl.e:50
% [agent,time]
% HoldsAt(Win(agent),time) ->
% (HoldsAt(PlaySoccer(agent),time) |
%  HoldsAt(PlayHideAndSeek(agent),time) |
%  (HoldsAt(PlayComputerGame(agent),time) &
%   ({agent1} agent1!=agent & HoldsAt(PlayComputerGame(agent1),time)))).

 /*  holds_at(win(Agent), Time) ->
       (   holds_at(playSoccer(Agent), Time)
       ;   holds_at(playHideAndSeek(Agent), Time)
       ;   holds_at(playComputerGame(Agent), Time),
           
           [ ec_current_domain_db((not(equals(Agent1, Agent)), holds_at(playComputerGame(Agent1), Time), some([Agent1])),
                                  Domain_db_Ret)
           ]
       ).
 */

 /*  not(holds_at(win(Agent), Time)) :-
       not(holds_at(playSoccer(Agent), Time)),
       not(holds_at(playHideAndSeek(Agent), Time)),
       (   not(holds_at(playComputerGame(Agent), Time))
       ;   not(
               [ ec_current_domain_db((not(equals(Agent1, Agent)), holds_at(playComputerGame(Agent1), Time), some([Agent1])),
                                      Domain_db_Ret)
               ])
       ).
 */
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/FrankEtAl2003/FrankEtAl.e:55
axiom(holds_at(neg(win(Agent)), Time),
   
    [ holds_at(neg(playSoccer(Agent)), Time),
      holds_at(neg(playHideAndSeek(Agent)), Time),
       (holds_at(neg(playComputerGame(Agent)), Time);not([ec_current_domain_db((not(equals(Agent1, Agent)), holds_at(playComputerGame(Agent1), Time), some([Agent1])), Domain_db_Ret)]))
    ]).

 /*  holds_at(playSoccer(Agent), Time) :-
       ( not(holds_at(playHideAndSeek(Agent), Time)),
         (   not(holds_at(playComputerGame(Agent), Time))
         ;   not(
                 [ ec_current_domain_db((not(equals(Agent1, Agent)), holds_at(playComputerGame(Agent1), Time), some([Agent1])),
                                        Domain_db_Ret)
                 ])
         )
       ),
       holds_at(win(Agent), Time).
 */
axiom(holds_at(playSoccer(Agent), Time),
   
    [ holds_at(neg(playHideAndSeek(Agent)), Time),
       (holds_at(neg(playComputerGame(Agent)), Time);not([ec_current_domain_db((not(equals(Agent1, Agent)), holds_at(playComputerGame(Agent1), Time), some([Agent1])), Domain_db_Ret)])),
      holds_at(win(Agent), Time)
    ]).

 /*  holds_at(playHideAndSeek(Agent), Time) :-
       (   not(holds_at(playComputerGame(Agent), Time))
       ;   not(
               [ ec_current_domain_db((not(equals(Agent1, Agent)), holds_at(playComputerGame(Agent1), Time), some([Agent1])),
                                      Domain_db_Ret)
               ])
       ),
       not(holds_at(playSoccer(Agent), Time)),
       holds_at(win(Agent), Time).
 */
axiom(holds_at(playHideAndSeek(Agent), Time),
   
    [  (holds_at(neg(playComputerGame(Agent)), Time);not([ec_current_domain_db((not(equals(Agent1, Agent)), holds_at(playComputerGame(Agent1), Time), some([Agent1])), Domain_db_Ret)])),
      holds_at(neg(playSoccer(Agent)), Time),
      holds_at(win(Agent), Time)
    ]).

 /*  holds_at(playComputerGame(Agent), Time) :-
       not(holds_at(playHideAndSeek(Agent), Time)),
       not(holds_at(playSoccer(Agent), Time)),
       holds_at(win(Agent), Time).
 */
axiom(holds_at(playComputerGame(Agent), Time),
   
    [ holds_at(neg(playHideAndSeek(Agent)), Time),
      holds_at(neg(playSoccer(Agent)), Time),
      holds_at(win(Agent), Time)
    ]).

 /*  [ec_current_domain_db((not(equals(Agent1, Agent)), holds_at(playComputerGame(Agent1), Time), some([Agent1])), Domain_db_Ret)] :-
       not(holds_at(playHideAndSeek(Agent), Time)),
       not(holds_at(playSoccer(Agent), Time)),
       holds_at(win(Agent), Time).
 */
axiom([ec_current_domain_db((not(equals(Agent1, Agent)), holds_at(playComputerGame(Agent1), Time), some([Agent1])), Domain_db_Ret)],
   
    [ not(holds_at(playHideAndSeek(Agent), Time)),
      not(holds_at(playSoccer(Agent), Time)),
      holds_at(win(Agent), Time)
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/FrankEtAl2003/FrankEtAl.e:57
% [agent,time]
% HoldsAt(PlaySoccer(agent),time) &
% HoldsAt(Win(agent),time) ->
% !HoldsAt(PlaySoccer(agent),time+1).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/FrankEtAl2003/FrankEtAl.e:60
axiom(holds_at(neg(playSoccer(Agent)), start),
   
    [ holds_at(playSoccer(Agent), t),
      holds_at(win(Agent), t),
      b(t, start),
      ignore(t+1=start)
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/FrankEtAl2003/FrankEtAl.e:62
% [agent,time]
% HoldsAt(PlayHideAndSeek(agent),time) &
% HoldsAt(Win(agent),time) ->
% !HoldsAt(PlayHideAndSeek(agent),time+1).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/FrankEtAl2003/FrankEtAl.e:65
axiom(holds_at(neg(playHideAndSeek(Agent)), start),
   
    [ holds_at(playHideAndSeek(Agent), t),
      holds_at(win(Agent), t),
      b(t, start),
      ignore(t+1=start)
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/FrankEtAl2003/FrankEtAl.e:67
% [agent,time]
% HoldsAt(PlayComputerGame(agent),time) &
% HoldsAt(Win(agent),time) ->
% !HoldsAt(PlayComputerGame(agent),time+1).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/FrankEtAl2003/FrankEtAl.e:70
axiom(holds_at(neg(playComputerGame(Agent)), start),
   
    [ holds_at(playComputerGame(Agent), t),
      holds_at(win(Agent), t),
      b(t, start),
      ignore(t+1=start)
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/FrankEtAl2003/FrankEtAl.e:72
% [agent,time]
% HoldsAt(Win(agent),time) ->
% HoldsAt(PlaySoccer(agent),time-1) |
% HoldsAt(PlayHideAndSeek(agent),time-1) |
% HoldsAt(PlayComputerGame(agent),time-1).

 /*  holds_at(win(Agent), Time) ->
       (   holds_at(playSoccer(Agent), Time-1)
       ;   holds_at(playHideAndSeek(Agent), Time-1)
       ;   holds_at(playComputerGame(Agent), Time-1)
       ).
 */

 /*  holds_at(playSoccer(Agent), Time-1) :-
       ( not(holds_at(playHideAndSeek(Agent), Time-1)),
         not(holds_at(playComputerGame(Agent), Time-1))
       ),
       holds_at(win(Agent), Time).
 */
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/FrankEtAl2003/FrankEtAl.e:76
axiom(holds_at(playSoccer(Agent), t),
   
    [ holds_at(neg(playHideAndSeek(Agent)), t),
      holds_at(neg(playComputerGame(Agent)), t),
      holds_at(win(Agent), start),
      b(t, start),
      ignore(start-1=t)
    ]).

 /*  holds_at(playHideAndSeek(Agent), start-1) :-
       not(holds_at(playComputerGame(Agent), start-1)),
       not(holds_at(playSoccer(Agent), start-1)),
       holds_at(win(Agent), start).
 */
axiom(holds_at(playHideAndSeek(Agent), t),
   
    [ holds_at(neg(playComputerGame(Agent)), t),
      holds_at(neg(playSoccer(Agent)), t),
      holds_at(win(Agent), start),
      b(t, start),
      ignore(start-1=t)
    ]).

 /*  holds_at(playComputerGame(Agent), start-1) :-
       not(holds_at(playHideAndSeek(Agent), start-1)),
       not(holds_at(playSoccer(Agent), start-1)),
       holds_at(win(Agent), start).
 */
axiom(holds_at(playComputerGame(Agent), t),
   
    [ holds_at(neg(playHideAndSeek(Agent)), t),
      holds_at(neg(playSoccer(Agent)), t),
      holds_at(win(Agent), start),
      b(t, start),
      ignore(start-1=t)
    ]).

 /*  not(holds_at(win(Agent), start)) :-
       not(holds_at(playSoccer(Agent), start-1)),
       not(holds_at(playHideAndSeek(Agent), start-1)),
       not(holds_at(playComputerGame(Agent), start-1)).
 */
axiom(holds_at(neg(win(Agent)), start),
   
    [ holds_at(neg(playSoccer(Agent)), t),
      holds_at(neg(playHideAndSeek(Agent)), t),
      holds_at(neg(playComputerGame(Agent)), t),
      b(t, start),
      ignore(start-1=t)
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/FrankEtAl2003/FrankEtAl.e:78
% [agent,time]
% HoldsAt(PlaySoccer(agent),time) ->
% !HoldsAt(Raining(),time).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/FrankEtAl2003/FrankEtAl.e:80
axiom(holds_at(neg(raining()), Time),
    [holds_at(playSoccer(Agent), Time)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/FrankEtAl2003/FrankEtAl.e:82
% [agent,time]
% HoldsAt(Win(agent),time) ->
% !({agent1} agent1!=agent & HoldsAt(Win(agent1),time)).
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/FrankEtAl2003/FrankEtAl.e:84
axiom(not([ec_current_domain_db((not(equals(Agent1, Agent)), holds_at(win(Agent1), Time), some([Agent1])), Domain_db_Ret)]),
    [holds_at(win(Agent), Time)]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/FrankEtAl2003/FrankEtAl.e:86
% [agent1,agent2,time]
% HoldsAt(PlayHideAndSeek(agent1),time) &
% HoldsAt(PlayHideAndSeek(agent2),time) ->
% ((HoldsAt(Outside(agent1),time) & HoldsAt(Outside(agent2),time)) |
%  (!HoldsAt(Outside(agent1),time) & !HoldsAt(Outside(agent2),time))).

 /*  holds_at(playHideAndSeek(Agent1), Time), holds_at(playHideAndSeek(Agent2), Time) ->
       (   holds_at(outside(Agent1), Time),
           holds_at(outside(Agent2), Time)
       ;   holds_at(neg(outside(Agent1)), Time),
           holds_at(neg(outside(Agent2)), Time)
       ).
 */

 /*  not(holds_at(playHideAndSeek(Agent1), Time)) :-
       holds_at(playHideAndSeek(Agent2), Time),
       (   not(holds_at(outside(Agent1), Time))
       ;   not(holds_at(outside(Agent2), Time))
       ),
       (   holds_at(outside(Agent1), Time)
       ;   holds_at(outside(Agent2), Time)
       ).
 */
% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/FrankEtAl2003/FrankEtAl.e:90
axiom(holds_at(neg(playHideAndSeek(Agent1)), Time),
   
    [ holds_at(playHideAndSeek(Agent2), Time),
       (holds_at(neg(outside(Agent1)), Time);holds_at(neg(outside(Agent2)), Time)),
       (holds_at(outside(Agent1), Time);holds_at(outside(Agent2), Time))
    ]).

 /*  not(holds_at(playHideAndSeek(Agent2), Time)) :-
       holds_at(playHideAndSeek(Agent1), Time),
       (   not(holds_at(outside(Agent1), Time))
       ;   not(holds_at(outside(Agent2), Time))
       ),
       (   holds_at(outside(Agent1), Time)
       ;   holds_at(outside(Agent2), Time)
       ).
 */
axiom(holds_at(neg(playHideAndSeek(Agent2)), Time),
   
    [ holds_at(playHideAndSeek(Agent1), Time),
       (holds_at(neg(outside(Agent1)), Time);holds_at(neg(outside(Agent2)), Time)),
       (holds_at(outside(Agent1), Time);holds_at(outside(Agent2), Time))
    ]).

 /*  holds_at(outside(Agent1), Time) :-
       (   holds_at(outside(Agent1), Time)
       ;   holds_at(outside(Agent2), Time)
       ),
       holds_at(playHideAndSeek(Agent1), Time),
       holds_at(playHideAndSeek(Agent2), Time).
 */
axiom(holds_at(outside(Agent1), Time),
   
    [  (holds_at(outside(Agent1), Time);holds_at(outside(Agent2), Time)),
      holds_at(playHideAndSeek(Agent1), Time),
      holds_at(playHideAndSeek(Agent2), Time)
    ]).

 /*  holds_at(outside(Agent2), Time) :-
       (   holds_at(outside(Agent1), Time)
       ;   holds_at(outside(Agent2), Time)
       ),
       holds_at(playHideAndSeek(Agent1), Time),
       holds_at(playHideAndSeek(Agent2), Time).
 */
axiom(holds_at(outside(Agent2), Time),
   
    [  (holds_at(outside(Agent1), Time);holds_at(outside(Agent2), Time)),
      holds_at(playHideAndSeek(Agent1), Time),
      holds_at(playHideAndSeek(Agent2), Time)
    ]).

 /*  not(holds_at(outside(Agent1), Time)) :-
       (   not(holds_at(outside(Agent1), Time))
       ;   not(holds_at(outside(Agent2), Time))
       ),
       holds_at(playHideAndSeek(Agent1), Time),
       holds_at(playHideAndSeek(Agent2), Time).
 */
axiom(holds_at(neg(outside(Agent1)), Time),
   
    [  (holds_at(neg(outside(Agent1)), Time);holds_at(neg(outside(Agent2)), Time)),
      holds_at(playHideAndSeek(Agent1), Time),
      holds_at(playHideAndSeek(Agent2), Time)
    ]).

 /*  not(holds_at(outside(Agent2), Time)) :-
       (   not(holds_at(outside(Agent1), Time))
       ;   not(holds_at(outside(Agent2), Time))
       ),
       holds_at(playHideAndSeek(Agent1), Time),
       holds_at(playHideAndSeek(Agent2), Time).
 */
axiom(holds_at(neg(outside(Agent2)), Time),
   
    [  (holds_at(neg(outside(Agent1)), Time);holds_at(neg(outside(Agent2)), Time)),
      holds_at(playHideAndSeek(Agent1), Time),
      holds_at(playHideAndSeek(Agent2), Time)
    ]).


% From /opt/logicmoo_workspace/packs_sys/logicmoo_nlu/prolog/ec_planner/examples/FrankEtAl2003/FrankEtAl.e:92
%; End of file.
